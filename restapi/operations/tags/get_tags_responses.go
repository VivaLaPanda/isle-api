// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/VivaLaPanda/isle-api/models"
)

// GetTagsOKCode is the HTTP code returned for type GetTagsOK
const GetTagsOKCode int = 200

/*GetTagsOK An paged array of tags

swagger:response getTagsOK
*/
type GetTagsOK struct {

	/*
	  In: Body
	*/
	Payload models.Tags `json:"body,omitempty"`
}

// NewGetTagsOK creates GetTagsOK with default headers values
func NewGetTagsOK() *GetTagsOK {

	return &GetTagsOK{}
}

// WithPayload adds the payload to the get tags o k response
func (o *GetTagsOK) WithPayload(payload models.Tags) *GetTagsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tags o k response
func (o *GetTagsOK) SetPayload(payload models.Tags) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Tags, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetTagsDefault unexpected error

swagger:response getTagsDefault
*/
type GetTagsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagsDefault creates GetTagsDefault with default headers values
func NewGetTagsDefault(code int) *GetTagsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTagsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get tags default response
func (o *GetTagsDefault) WithStatusCode(code int) *GetTagsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get tags default response
func (o *GetTagsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get tags default response
func (o *GetTagsDefault) WithPayload(payload *models.Error) *GetTagsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tags default response
func (o *GetTagsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

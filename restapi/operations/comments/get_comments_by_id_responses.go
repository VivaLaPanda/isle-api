// Code generated by go-swagger; DO NOT EDIT.

package comments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/VivaLaPanda/isle/api/models"
)

// GetCommentsByIDOKCode is the HTTP code returned for type GetCommentsByIDOK
const GetCommentsByIDOKCode int = 200

/*GetCommentsByIDOK Expected response to a valid request

swagger:response getCommentsByIdOK
*/
type GetCommentsByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ContentNode `json:"body,omitempty"`
}

// NewGetCommentsByIDOK creates GetCommentsByIDOK with default headers values
func NewGetCommentsByIDOK() *GetCommentsByIDOK {

	return &GetCommentsByIDOK{}
}

// WithPayload adds the payload to the get comments by Id o k response
func (o *GetCommentsByIDOK) WithPayload(payload *models.ContentNode) *GetCommentsByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get comments by Id o k response
func (o *GetCommentsByIDOK) SetPayload(payload *models.ContentNode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCommentsByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetCommentsByIDDefault unexpected error

swagger:response getCommentsByIdDefault
*/
type GetCommentsByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCommentsByIDDefault creates GetCommentsByIDDefault with default headers values
func NewGetCommentsByIDDefault(code int) *GetCommentsByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCommentsByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get comments by Id default response
func (o *GetCommentsByIDDefault) WithStatusCode(code int) *GetCommentsByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get comments by Id default response
func (o *GetCommentsByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get comments by Id default response
func (o *GetCommentsByIDDefault) WithPayload(payload *models.Error) *GetCommentsByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get comments by Id default response
func (o *GetCommentsByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCommentsByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
